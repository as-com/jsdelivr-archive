Issue
  { issueClosedAt = Just 2014 (-08) (-24) 20 : 45 : 51 UTC
  , issueUpdatedAt = 2014 (-08) (-24) 20 : 45 : 51 UTC
  , issueEventsUrl =
      URL
        "https://api.github.com/repos/jsdelivr/jsdelivr/issues/1518/events"
  , issueHtmlUrl =
      Just (URL "https://github.com/jsdelivr/jsdelivr/pull/1518")
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1518
  , issueAssignees = []
  , issueUser =
      SimpleUser
        { simpleUserId = Id 8539411
        , simpleUserLogin = N "RajibKundu"
        , simpleUserAvatarUrl =
            URL "https://avatars1.githubusercontent.com/u/8539411?v=3"
        , simpleUserUrl = URL "https://api.github.com/users/RajibKundu"
        }
  , issueTitle = "Create sliderman.1.1.1.js"
  , issuePullRequest =
      Just
        PullRequestReference
          { pullRequestReferenceHtmlUrl =
              Just (URL "https://github.com/jsdelivr/jsdelivr/pull/1518")
          , pullRequestReferencePatchUrl =
              Just (URL "https://github.com/jsdelivr/jsdelivr/pull/1518.patch")
          , pullRequestReferenceDiffUrl =
              Just (URL "https://github.com/jsdelivr/jsdelivr/pull/1518.diff")
          }
  , issueUrl =
      URL "https://api.github.com/repos/jsdelivr/jsdelivr/issues/1518"
  , issueCreatedAt = 2014 (-08) (-24) 20 : 34 : 00 UTC
  , issueBody =
      Just
        "/**\n- Sliderman.js \n- Version: 1.1.1\n- Author: Taras Ozarko (tozarko@gmail.com)\n  *\n- (c) 2010 Devtrix. All rights reserved. http://www.devtrix.net/sliderman/\n  **/\n\nvar Sliderman = new function(){\n    var Sliderman = this;\n\n```\nfunction random(l){\n    r = Math.round(Math.random()*(l+1));\n    if(r > 0 && r < l+1) r--;\n    else r = random(l);\n    return r;\n}//random\n\nfunction foreach(o, f){\n    for(var k in o){\n        if(o.hasOwnProperty(k) && f(k,o[k],o)) return;\n    }\n}//foreach\n\nfunction addElementEvent(o,e,f){\n    var of = o[e];\n    o[e] = typeof of != 'function' ? f : function(){of();f();};\n}//addElementEvent\n\nvar _loadImage = [];\nfunction loadImage(s,f,always_show_loading){\n    var l = function(){if(_loadImage[s]){if(f)f(s);}else{var i=newElement('IMG');i.onload=function(){_loadImage[s]=true;if(f)f(s);};i.src=s;}}\n    if(always_show_loading) setTimeout(l, typeof(always_show_loading) == 'number' ? always_show_loading : 1000);\n    else l();\n}//loadImage\n\nfunction array_copy(a){\n    if(a.constructor.name == 'Array') var r = [];\n    else var r = {};\n\n    foreach(a, function(i){\n        r[i] = typeof(a[i]) != 'object' ? a[i] : array_copy(a[i]);\n    });\n\n    return r;\n}//array_copy\n\nfunction now(){\n    return (new Date()).getTime();\n}//now\n\nfunction eq(a, b){\n    return String(a).replace(/^\\s+/, '').replace(/\\s+$/, '').toLowerCase() == String(b).replace(/^\\s+/, '').replace(/\\s+$/, '').toLowerCase();\n}//eq\n\nfunction array_search(arr, a, b){\n    var result = false;\n    if(!b){\n        foreach(arr, function(i){\n            if(eq(arr[i], b)){\n                result = i;\n                return true;\n            }\n        });\n    }\n    else{\n        foreach(arr, function(i){\n            if(eq(arr[i][a], b)){\n                result = i;\n                return true;\n            }\n        });\n    }\n    return result;\n}//array_search\n\nfunction validateOption(a, b){\n    b = b.split(',');\n    var result;\n    foreach(b, function(i){\n        result = b[i];\n        if(eq(a, b[i])) return true;\n    });\n    return result;\n}//validateOption\n\nvar setOpacity;\nfunction setOpacityInit(){\n    if(setOpacity) return;\n    var p, b = document.body, s = b.style;\n    if (typeof s.opacity == 'string') p = 'opacity';\n  else if (typeof s.MozOpacity == 'string') p = 'MozOpacity';\n  else if (typeof s.KhtmlOpacity == 'string') p = 'KhtmlOpacity';\n  else if (b.filters && navigator.appVersion.match(/MSIE ([\\d.]+);/)[1]>=5.5) p = 'filter';\n  if(p == 'filter'){\n        setOpacity = function(style, v){\n            if(v > 1) v = 1;\n            else if(v < 0) v = 0;\n          style[p] = \"alpha(opacity=\" + Math.round(v*100) + \")\";\n        }\n    }else if(p){\n        setOpacity = function(style, v){\n            if(v > 1) v = 1;\n            else if(v < 0) v = 0;\n          style[p] = v.toFixed(2);\n        }\n    }else setOpacity = ef\n}//setOpacityInit\n\nfunction setStyle(style, property, value){\n    if(typeof(value) == 'string') style[property] = value;\n    else if(property == 'clip') style[property] = 'rect('+Math.round(value[0])+'px, '+Math.round(value[1])+'px, '+Math.round(value[2])+'px, '+Math.round(value[3])+'px)';\n    else if(property == 'opacity') setOpacity(style, value);\n    else style[property] = Math.round(value)+'px';\n}//setStyle\nfunction setStyles(style, properties){\n    foreach(properties, function(property){\n        setStyle(style, property, properties[property]);\n    });\n}\nfunction hide(style){style.display = 'none';}\nfunction show(style){style.display = '';}\n\nfunction newElement(tagName, styles){\n    var e = document.createElement(tagName);\n    if(styles) setStyles(e.style, styles);\n    return e;\n}//newElement\n\nvar EffectsArr = [];\nfunction Effects(parameters){\n    var effect = parameters.effect, display = parameters.display;\n    if(!effect) effect = {};\n    effect.interval = effect.interval || 20;\n    effect.duration = effect.duration || 200;\n    effect.delay = effect.delay || 0;\n    var framesCount = Math.round(effect.duration / effect.interval);\n    var index, piece, r, image, startStylesArr = [], AnimateArr = [], needAnimate = [], AnimateItemsArr = [], styleStart, styleEnd, styleDif;\n\n    var container = newElement('div', {width: display.width, height: display.height, position: 'absolute', top: 0, left: 0, overflow: 'hidden'})\n    parameters.container.appendChild(container);\n\n    var pieces = {cols: effect.cols ? effect.cols : 1, rows: effect.rows ? effect.rows : 1};\n    pieces.count = pieces.cols*pieces.rows;\n    pieces.width = display.width / pieces.cols, pieces.height = display.height / pieces.rows;\n    for(var c = 0; c < pieces.cols; c++) for(var r = 0; r < pieces.rows; r++) pieces[c+','+r] = [r*pieces.height, c*pieces.width+pieces.width, r*pieces.height+pieces.height, c*pieces.width];\n\n    var optionsCopy = array_copy(effect);\n    var effectsInvers = array_copy(effect);\n    effectsInvers.top = optionsCopy.bottom;\n    effectsInvers.bottom = optionsCopy.top;\n    effectsInvers.left = optionsCopy.right;\n    effectsInvers.right = optionsCopy.left;\n\n    effect.order = validateOption(effect.order, 'straight,swirl,snake,straight_stairs,random');\n    var orderArr = doOrder(pieces.cols, pieces.rows, effect.order, effect.road, effect.reverse);\n\n    var effectsOptStr = effect.order == 'random' ? now() : [\n        effect.interval, effect.duration, effect.delay, effect.cols, effect.rows,\n        effect.top, effect.right, effect.bottom, effect.left,\n        effect.fade, effect.zoom, effect.move, effect.chess,\n        effect.order, effect.road, effect.reverse\n    ].join(',');\n\n    if(EffectsArr[effectsOptStr]){\n        startStylesArr = EffectsArr[effectsOptStr].startStylesArr;\n        AnimateArr = EffectsArr[effectsOptStr].AnimateArr;\n        needAnimate = EffectsArr[effectsOptStr].needAnimate;\n    }else{\n        for(r = 0; r < pieces.rows; r++) for(c = 0; c < pieces.cols; c++){\n            index = orderArr[c+','+r];\n\n            if(effect.chess && index % 2 == 1) effect = effectsInvers;\n            else effect = optionsCopy;\n\n            styleStart = {top: 0, left: 0, opacity: 1, width: display.width, height: display.height};\n            styleEnd = array_copy(styleStart); piece = array_copy(pieces[c+','+r]);\n\n            if(effect.fade) styleStart.opacity = 0;\n\n            if(effect.top && effect.bottom) piece[0] = piece[2] = (piece[0] + piece[2]) / 2;\n            else if(effect.top) piece[2] -= pieces.height;\n            else if(effect.bottom) piece[0] += pieces.height;\n            if(effect.left && effect.right) piece[1] = piece[3] = (piece[1] + piece[3]) / 2;\n            else if(effect.left) piece[1] -= pieces.width;\n            else if(effect.right) piece[3] += pieces.width;\n\n            if(effect.zoom){\n                styleStart.left = pieces[c+','+r][3];\n                styleStart.top = pieces[c+','+r][0];\n                if(effect.left && effect.right) styleStart.left += pieces.width / 2;\n                else if(effect.right) styleStart.left += pieces.width;\n                else if(!effect.left) styleStart.left = 0;\n                if(effect.top && effect.bottom) styleStart.top += pieces.height / 2;\n                else if(effect.bottom) styleStart.top += pieces.height;\n                else if(!effect.top) styleStart.top = 0;\n                if(effect.left || effect.right) piece[1] = piece[3] = 0;\n                if(effect.top || effect.bottom) piece[0] = piece[2] = 0;\n                styleStart.width = effect.left || effect.right ? 0 : display.width;\n                styleStart.height = effect.top || effect.bottom ? 0 : display.height;\n            }\n\n            if(effect.move){\n                if(effect.top){\n                    styleStart.top = parseInt(styleStart.top)-pieces.height;\n                    piece[0] += pieces.height; piece[2] += pieces.height;\n                }\n                if(effect.bottom){\n                    styleStart.top = parseInt(styleStart.top)+pieces.height;\n                    piece[0] -= pieces.height; piece[2] -= pieces.height;\n                }\n                if(effect.left){\n                    styleStart.left = parseInt(styleStart.left)-pieces.width;\n                    piece[1] += pieces.width; piece[3] += pieces.width;\n                }\n                if(effect.right){\n                    styleStart.left = parseInt(styleStart.left)+pieces.width;\n                    piece[1] -= pieces.width; piece[3] -= pieces.width;\n                }\n            }\n\n            styleStart.clip = piece;\n            styleEnd.clip = pieces[c+','+r];\n\n            styleDif = [];\n            foreach(styleEnd, function(property){\n                if(styleStart[property].toString() != styleEnd[property].toString()){\n                    styleDif[property] = [];\n                    if(property == 'clip'){\n                        foreach(styleStart[property], function(n){\n                            styleDif[property][n] = styleEnd[property][n] - styleStart[property][n];\n                        });\n                    }else styleDif[property] = styleEnd[property] - styleStart[property];\n                    needAnimate[index] = true;\n                }\n            });\n\n            startStylesArr[index] = styleStart; AnimateArr[index] = [];\n            if(effect.delay) for(var n = 0; n < Math.round(index*effect.delay/effect.interval); n++) AnimateArr[index].push(null);\n\n            var frameN;\n            if(!needAnimate[index]) AnimateArr[index].push({display: ''});\n            else for(frameN = 1; frameN <= framesCount; frameN++){\n                progress = frameN/framesCount;\n                progress = -Math.cos(progress*Math.PI)/2 + 0.5;\n                var style_c = [];\n                if(frameN == framesCount) style_c = styleEnd;\n                else{\n                    foreach(styleDif, function(property){\n                        value = [];\n                        if(property == 'clip'){\n                            foreach(styleDif[property], function(n){\n                                value[n] = styleStart[property][n]+styleDif[property][n]*progress;\n                            });\n                        }else value = styleStart[property]+styleDif[property]*progress;\n                        style_c[property] = value;\n                    });\n                }\n                AnimateArr[index].push(style_c);\n            }\n\n        }//for\n        EffectsArr[effectsOptStr] = {startStylesArr: startStylesArr, AnimateArr: AnimateArr, needAnimate: needAnimate};\n    }\n\n    for(r = 0; r < pieces.rows; r++) for(c = 0; c < pieces.cols; c++){\n        index = orderArr[c+','+r];\n        image = newElement('IMG', startStylesArr[index]);\n        var style = image.style;\n        image.src = parameters.src;\n        style.position = 'absolute';\n        container.appendChild(image);\n        AnimateItemsArr[index] = style;\n        if(!needAnimate[index]) hide(AnimateItemsArr[index]);\n    }\n\n    //ANIMATE\n    var time_s = now();\n    var framesCountAll = AnimateArr[AnimateArr.length-1].length;\n    var AnimateItem, AnimateItemsComplete = [], timerFuncStatus = true, timerFunc = function(){\n        if(timerFuncStatus){\n            var frameC = Math.ceil((now() - time_s) / effect.interval);\n            frameC = frameC >= framesCountAll ? framesCountAll-1 : frameC-1;\n            foreach(AnimateArr, function(index){\n                AnimateItem = frameC > AnimateArr[index].length-1 ? AnimateArr[index].length-1 : frameC;\n                if(AnimateArr[index][AnimateItem] && !AnimateItemsComplete[index+','+AnimateItem]){\n                    setStyles(AnimateItemsArr[index], AnimateArr[index][AnimateItem]);\n                    AnimateItemsComplete[index+','+AnimateItem] = true;\n                }\n            });\n            if(frameC == framesCountAll-1){\n                if(pieces.count > 1) container.innerHTML = '<img src=\"'+parameters.src+'\" width=\"'+display.width+'\" height=\"'+display.height+'\" />';\n                parameters.callback(container);\n                timerFuncStatus = false;\n            }\n        }\n        return timerFuncStatus;\n    };\n    var animateInterval = setInterval(function(){\n        if(!timerFunc()) clearInterval(animateInterval);\n    }, effect.interval);\n```\n\n}//Effects\n\n```\nvar OrderArr = [];\nfunction doOrder(cols, rows, order, road, reverse){\n    cols = parseInt(cols); rows = parseInt(rows);\n    var arr = [], tmp = [], i = 0, c = 0, r = 0, count = cols*rows, cl = cols - 1, rl = rows - 1, il = count - 1, func;\n    if(!road) road = 'RB';\n    function map(f){for(r = 0; r < rows; r++) for(c = 0; c < cols; c++) f();}\n\n    var OrderOptStr = [cols, rows, order, road, reverse].join(',');\n    if(!OrderArr[OrderOptStr]){\n        if(count > 1){\n\n            switch(order){\n                case 'straight':\n                    switch(road){\n                        case 'BL': func = function(){arr[c+','+r] = il-(c*rows+(rl-r));}; break;\n                        case 'RT': func = function(){arr[c+','+r] = il-(r*cols+(cl-c));}; break;\n                        case 'TL': func = function(){arr[c+','+r] = il-(c*rows+r);};\n                        case 'LT': func = function(){arr[c+','+r] = il-(r*cols+c);}; break;\n                        case 'BR': func = function(){arr[c+','+r] = c*rows+r;}; break;\n                        case 'LB': func = function(){arr[c+','+r] = r*cols+(cl-c);}; break;\n                        case 'TR': func = function(){arr[c+','+r] = c*rows+(rl-r);}; break;\n                        default: func = function(){arr[c+','+r] = r*cols+c;}; break;//'RB'\n                    }\n                    map(func);\n                break;\n                case 'swirl':\n                    var courses, course = 0;\n                    switch(road){\n                        case 'BL': c = cl; r = 0; courses = ['r+', 'c-', 'r-', 'c+']; break;\n                        case 'RT': c = 0; r = rl; courses = ['c+', 'r-', 'c-', 'r+']; break;\n                        case 'TL': c = cl; r = rl; courses = ['r-', 'c-', 'r+', 'c+']; break;\n                        case 'LT': c = cl; r = rl; courses = ['c-', 'r-', 'c+', 'r+']; break;\n                        case 'BR': c = 0; r = 0; courses = ['r+', 'c+', 'r-', 'c-']; break;\n                        case 'LB': c = cl; r = 0; courses = ['c-', 'r+', 'c+', 'r-']; break;\n                        case 'TR': c = 0; r = rl; courses = ['r-', 'c+', 'r+', 'c-']; break;\n                        default: c = 0; r = 0; courses = ['c+', 'r+', 'c-', 'r-']; break;//'RB'\n                    }\n                    i = 0;\n                    while(i < cols*rows){\n                        if(c >= 0 && c < cols && r >= 0 && r < rows && typeof(arr[c+','+r]) == 'undefined') arr[c+','+r] = i++;\n                        else switch(courses[course++%courses.length]){case 'c+': c--; break; case 'r+': r--; break; case 'c-': c++; break; case 'r-': r++; break;}\n                        switch(courses[course%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}\n                    }\n                break;\n                case 'snake':\n                    var courses, course = 0;\n                    switch(road){\n                        case 'BL': c = cl; r = 0; courses = ['r+', 'c-', 'r-', 'c-']; break;\n                        case 'RT': c = 0; r = rl; courses = ['c+', 'r-', 'c-', 'r-']; break;\n                        case 'TL': c = cl; r = rl; courses = ['r-', 'c-', 'r+', 'c-']; break;\n                        case 'LT': c = cl; r = rl; courses = ['c-', 'r-', 'c+', 'r-']; break;\n                        case 'BR': c = 0; r = 0; courses = ['r+', 'c+', 'r-', 'c+']; break;\n                        case 'LB': c = cl; r = 0; courses = ['c-', 'r+', 'c+', 'r+']; break;\n                        case 'TR': c = 0; r = rl; courses = ['r-', 'c+', 'r+', 'c+']; break;\n                        default: c = 0; r = 0; courses = ['c+', 'r+', 'c-', 'r+']; break;//'RB'\n                    }\n                    i = 0;\n                    while(i < cols*rows){\n                        if(c >= 0 && c < cols && r >= 0 && r < rows && typeof(arr[c+','+r]) == 'undefined'){\n                            arr[c+','+r] = i++;\n                            switch(courses[course%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}\n                        }\n                        else{\n                            switch(courses[course++%courses.length]){case 'c+': c--; break; case 'r+': r--; break; case 'c-': c++; break; case 'r-': r++; break;}\n                            switch(courses[course++%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}\n                        }\n                    }\n                break;\n                case 'straight_stairs':\n                    switch(road){\n                        case 'BL': case 'TR': case 'TL': case 'BR': var C = 0, R = 0; break;\n                        case 'LB': case 'RT': case 'LT': case 'RB': default: var C = cl, R = 0; break;\n                    }\n                    c = C; r = R;\n                    while(i < count){\n                        if(road.indexOf('T') == 1 || road.indexOf('R') == 1) arr[c+','+r] = il - i++;\n                        else arr[c+','+r] = i++;\n                        switch(road){\n                            case 'BL': case 'TR': c--; r++; break;\n                            case 'TL': case 'BR': c++; r--; break;\n                            case 'LB': case 'RT': c--; r--; break;\n                            case 'RB': case 'LT': default: c++; r++; break;\n                        }\n                        if(c < 0 || r < 0 || c > cl || r > rl){\n                            switch(road){\n                                case 'BL': case 'TR': C++; break;\n                                case 'LB': case 'RT': case 'TL': case 'BR': R++; break;\n                                case 'RB': case 'LT': default: C--; break;\n                            }\n                            if(C < 0 || R < 0 || C > cl || R > rl){\n                                switch(road){\n                                    case 'BL': case 'TR': C = cl; R++; break;\n                                    case 'TL': case 'BR': R = rl; C++; break;\n                                    case 'LB': case 'RT': R = rl; C--; break;\n                                    case 'RB': case 'LT': default: C = 0; R++; break;\n                                }\n                                if(R > rl) R = rl; else if(R < 0) R = 0; else if(C > cl) C = cl; else if(C < 0) C = 0;\n                            }\n                            r = R; c = C;\n                        }\n                    }\n                break;\n            }\n\n            if(reverse) foreach(arr, function(i){arr[i] = il - arr[i];});\n\n        }else arr['0,0'] = 0;\n\n        OrderArr[OrderOptStr] = arr;\n    }\n\n    if(order == 'random'){\n        map(function(){tmp.push(c+','+r)});\n        tmp.sort(function(a,b){return Math.random() > 0.5;});\n        for(var i = 0; i < cols*rows; i++) arr[tmp[i]] = i;\n        OrderArr[OrderOptStr] = arr;\n    }\n    return OrderArr[OrderOptStr];\n}//doOrder\n\nvar _effectName = 0;\nfunction effectName(){\n    return 'Sliderman-nameless-effect-'+_effectName++;\n}//effectName\n\nvar globalEffects = [];\nSliderman.effect = function(e){\n    if(e){\n        var n = -1;\n        if(e.name){\n            var globalEffectsId = array_search(globalEffects, 'name', e.name);\n            if(globalEffectsId) n = globalEffectsId;\n        }else e.name = effectName();\n        if(n >= 0) globalEffects[n] = e;\n        else globalEffects.push(e);\n    }\n}//Sliderman.effect\n\nSliderman.effect({name: 'fade', fade: true, duration: 400});\nSliderman.effect({name: 'move', left: true, move: true, duration: 400});\n//Sliderman.effect({name: 'stairs', cols: 7, rows: 5, delay: 30, order: 'straight_stairs', road: 'BL', fade: true});\n//Sliderman.effect({name: 'blinds', cols: 10, delay: 100, duration: 400, order: 'straight', right: true, zoom: true, fade: true});\n//Sliderman.effect({name: 'rain', cols: 10, delay: 100, duration: 400, order: 'straight', top: true, fade: true});\n\nSliderman.slider = function(parameters){\n    setOpacityInit();\n\n    var Slider = {}, current, previous, prevImg, status = 'free', isHover = false, images = [], descriptions = [], links = [], ef = function(){};\n\n    //EVENTS\n    var events = parameters.events, eventCall = events ? function(e){if(events[e] && typeof(events[e]) == 'function') events[e](Slider);} : ef;\n\n    //SLIDER EFECTS     \n    var effects = [];\n    var previousEffect = -1;\n    var addEffect = function(e){\n        if(typeof(e) == 'string'){\n            e = e.split(',');\n            if(e.length == 1){\n                var globalEffectsId = array_search(globalEffects, 'name', e);\n                if(globalEffectsId) addEffect(globalEffects[globalEffectsId])\n            }else for(var i  = 0; i < e.length; i++) addEffect(e[i]);\n        }else if(e){\n            if(!e.name) e.name = effectName();\n            var effectsId = array_search(effects, 'name', e.name);\n            if(!effectsId) effectsId = effects.length;\n            effects[effectsId] = array_copy(e);\n        }\n    }//addEffect\n    var getEffect = function(){\n        var n = 0;\n        if(effects.length > 1){\n            n = random(effects.length);\n            if(previousEffect == n) n++;\n            n %= effects.length;\n            previousEffect = n;\n        }\n        return effects[n];\n    }//getEffect\n    if(parameters.effects){\n        if(parameters.effects.constructor.name == 'Array') for(var i = 0; i < parameters.effects.length; i++) addEffect(parameters.effects[i]);\n        else addEffect(parameters.effects);\n    }\n    if(!effects.length) effects = array_copy(globalEffects);\n\n    //OPTIONS\n    var display = parameters.display || {};\n    display.width = parameters.width;\n    display.height = parameters.height;\n    var loading = display.loading || {};\n    var description = display.description || null;\n    var navigation = display.navigation || null;\n    var buttons = display.buttons || null;\n\n    var styleDef = {width: display.width, height: display.height, position: 'absolute', top: 0, left: 0, display: 'block'};\n\n    var mainCont = document.getElementById(parameters.container);\n    addElementEvent(mainCont, 'onmouseover', function(){isHover = true;\n        if(buttons && buttons.hide) show(buttonsCont.style);\n        if(description && description.hide) show(descriptionCont.style);\n        if(display.pause) autoplay(false);\n    });\n    addElementEvent(mainCont, 'onmouseout', function(){isHover = false;\n        if(buttons && buttons.hide) hide(buttonsCont.style);\n        if(description && description.hide) hide(descriptionCont.style);\n        if(display.pause) autoplay(true);\n    });\n\n    //GET CONTENT\n    for(var i = 0; i < mainCont.childNodes.length; i++){\n        if(mainCont.childNodes[i].nodeType == 1){\n            if(mainCont.childNodes[i].tagName == 'A'){\n                var img = mainCont.childNodes[i].getElementsByTagName('IMG');\n                if(img.length){\n                    images.push(img[0].src);\n                    links[images.length-1] = mainCont.childNodes[i];\n                }else descriptions[images.length-1] = mainCont.childNodes[i];\n            }else if(mainCont.childNodes[i].tagName == 'IMG'){\n                images.push(mainCont.childNodes[i].src);\n                if(mainCont.childNodes[i].useMap){\n                    var maps = document.getElementsByTagName('MAP'), map;\n                    if(maps.length){\n                        for(var m = 0; m < maps.length; m++){\n                            if(maps[m].name && mainCont.childNodes[i].useMap.replace(/^[^#]*#/, '') == maps[m].name) map = maps[m];\n                        }\n                    }\n                    if(map) links[images.length-1] = map;\n                }\n            }else if(mainCont.childNodes[i].tagName == 'MAP') continue;\n            else descriptions[images.length-1] = mainCont.childNodes[i];\n            hide(mainCont.childNodes[i].style);\n        }\n    }\n    for(var i = 0; i < images.length; i++) loadImage(images[i]);\n\n    //CONTAINERS\n    var sliderCont = newElement('DIV', {width: display.width, height: display.height, position: 'relative'}); mainCont.appendChild(sliderCont);\n    var imagesCont = newElement('DIV', styleDef); sliderCont.appendChild(imagesCont);\n    var partsCont = newElement('DIV', styleDef); sliderCont.appendChild(partsCont);\n    var lnk = newElement('DIV', styleDef); partsCont.appendChild(lnk);\n    var loadingCont = newElement('DIV'); partsCont.appendChild(loadingCont);\n    var descriptionCont = newElement('DIV'); partsCont.appendChild(descriptionCont);\n    var buttonsCont = newElement('DIV'); partsCont.appendChild(buttonsCont);\n\n    //LINKS\n    var linkUpd = function(){\n        lnk.innerHTML = '';\n        value = links[current];\n        if(value){\n            if(value.tagName == 'MAP'){\n                var a = newElement('IMG', styleDef);\n                a.src = images[current];\n                a.useMap = '#'+value.name;\n            }else{\n                var a = newElement('A', styleDef);\n                a.href = value.href;\n                a.target = value.target;\n            }\n            setStyles(a.style, {opacity: 0, background: '#000000'})\n            a.onfocus = function(){this.blur();};\n            lnk.appendChild(a);\n        }\n    }\n\n    //LOADING\n    if(loading.background){\n        var loadingBgStyle = array_copy(styleDef);\n        loadingBgStyle.background = loading.background;\n        if(loading.opacity) loadingBgStyle.opacity = loading.opacity;\n        loadingCont.appendChild(newElement('DIV', loadingBgStyle));\n    }\n    if(loading.image){\n        var loadingImgStyle = array_copy(styleDef);\n        loadingImgStyle.background = 'url('+(loading.image)+') no-repeat center center';\n        loadingCont.appendChild(newElement('DIV', loadingImgStyle));\n    }\n    var showLoading = function(a){\n        if(a) show(loadingCont.style);\n        else hide(loadingCont.style);\n        status = a ? 'loading' : 'free';\n    }\n\n    //DESCRIPTION\n    if(description){\n        if(description.hide) hide(descriptionCont.style);\n\n        var descriptionStl = {position: 'absolute', overflow: 'hidden', textAlign: 'left'};\n        if(!description) description = [];\n        description.position = validateOption(description.position, 'top,left,right,bottom')\n        //descriptionStl.background = description.background || 'white';\n        //descriptionStl.opacity = description.opacity || 0.5;\n        //descriptionStl.width = description.position == 'top' || description.position == 'bottom' ? display.width : description.width || display.width*0.2;\n        //descriptionStl.height = description.position == 'left' || description.position == 'right' ? display.height : description.height || display.height*0.2;\n        descriptionStl[description.position == 'bottom'?'bottom':'top'] = 0;\n        //descriptionStl[description.position == 'right'?'right':'left'] = 0;\n\n        var descBg = newElement('DIV', descriptionStl); descriptionCont.appendChild(descBg);\n        descriptionStl.opacity = 1; descriptionStl.background = '';\n        var desc = newElement('DIV', descriptionStl); descriptionCont.appendChild(desc);\n\n        var descriptionShow = function(){\n            desc.innerHTML = '';\n            setStyle(descriptionCont.style, 'visibility', 'hidden');\n            var value = descriptions[current];\n            if(value){\n                setStyle(descriptionCont.style, 'visibility', 'visible');\n                value = value.cloneNode(true);\n                show(value.style);\n                desc.appendChild(value);\n                if(isHover) show(descriptionCont.style);\n            }\n        }\n    }else var descriptionShow = ef\n\n    //BUTTONS\n    if(buttons){\n        if(buttons.hide) hide(buttonsCont.style);\n        var btnPrev = newElement('A'); buttonsCont.appendChild(btnPrev);\n        btnPrev.href = 'javascript:void(0);';\n        var btnNext = btnPrev.cloneNode(true); buttonsCont.appendChild(btnNext);\n        btnPrev.onfocus = function(){this.blur();}\n        btnNext.onfocus = function(){this.blur();}\n        btnPrev.onclick = function(){Slider.prev();}\n        btnNext.onclick = function(){Slider.next();}\n        btnPrev.innerHTML = typeof(buttons.prev.label) != 'undefined' ? buttons.prev.label : 'prev';\n        btnNext.innerHTML = typeof(buttons.next.label) != 'undefined' ? buttons.next.label : 'next';\n        if(buttons.prev.className) btnPrev.className = buttons.prev.className;\n        if(buttons.next.className) btnNext.className = buttons.next.className;\n        if(buttons.opacity || buttons.prev.opacity) setOpacity(btnPrev.style, buttons.opacity || buttons.prev.opacity);\n        if(buttons.opacity || buttons.next.opacity) setOpacity(btnNext.style, buttons.opacity || buttons.next.opacity);\n    }\n\n    //NAVIGATION\n    if(navigation){\n        var navigationCont = document.getElementById(navigation.container);\n        var navigationLinks = [];\n        for(var i = 0; i < images.length; i++){\n            var a = newElement('A');\n            if(navigation.label) a.innerHTML = typeof(navigation.label) == 'string' ? navigation.label : i+1;\n            a.href = 'javascript:void(0);';\n            a.id = parameters.container+'_SliderNavigation'+i;\n            a.onfocus = function(){this.blur();};\n            a.onclick = function(){Slider.go(this.id.replace(/[^\\d]+/g, ''));};\n            navigationLinks.push(a);\n            navigationCont.appendChild(a);\n        }\n        var navigationUpd = function(){\n            for(var i = 0; i < navigationLinks.length; i++) navigationLinks[i].className = '';\n            navigationLinks[current].className = 'active';\n        }\n    }else var navigationUpd = ef\n\n    //AUTOPLAY\n    if(display.autoplay){\n        var autoplayTimeout;\n        var autoplay = function(a){\n            if(autoplayTimeout) clearTimeout(autoplayTimeout);\n            if(a && !(isHover && display.pause)) autoplayTimeout = setTimeout(Slider.next, display.autoplay);\n        }//autoplay\n    }else var autoplay = ef\n\n    Slider.next = function(){Slider.go(current + 1);}\n    Slider.prev = function(){Slider.go(current - 1);}\n    Slider.go = function(index){\n        index = (images.length + index) % images.length;\n        autoplay(false);\n        if(status != 'free' || current == index) return;\n        previous = current;\n        current = index;\n        eventCall('loading');\n        showLoading(true);\n        loadImage(images[current], function(src){\n            eventCall('before');\n            showLoading(false); status = 'busy'; descriptionShow(); linkUpd(); navigationUpd();\n            Effects({effect: getEffect(), display: display, container: imagesCont, src: src, callback: function(img){\n                if(prevImg) prevImg.parentNode.removeChild(prevImg);\n                prevImg = img; status = 'free'; autoplay(true);\n                eventCall('after');\n            }});\n        }, display.always_show_loading);\n    }//go\n    Slider.get = function(a){\n        switch(a){\n            case 'length': return images.length; break;\n            case 'current': return current; break;\n            case 'previous': return previous; break;\n            case 'images': return images; break;\n            case 'links': return links; break;\n            case 'descriptions': return descriptions; break;\n        }\n    }//get\n\n    if(display.mousewheel){\n        onmousewheel = function(d){\n            if(d > 0) Slider.prev();\n            else if(d < 0) Slider.next();\n            return true;\n        };\n        function wheel(event){\n            var d = 0;\n            if(!event) event = window.event;\n            if(event.wheelDelta){\n                d = event.wheelDelta/120;\n                if(window.opera) d = -d;\n            }else if(event.detail) d = -event.detail/3;\n            if(d && onmousewheel(d)){\n                if(event.preventDefault) event.preventDefault();\n                event.returnValue = false;\n            }\n        }//wheel\n        if(mainCont.addEventListener){\n            mainCont.addEventListener(\"DOMMouseScroll\",wheel,false);\n            mainCont.addEventListener(\"mousewheel\",wheel,false);\n        }else addElementEvent(mainCont, 'onmousewheel', wheel);\n    }\n\n    Slider.go(0);\n    return Slider;\n}//Sliderman.slider\n```\n\n}\n"
  , issueState = StateClosed
  , issueId = Id 41018375
  , issueComments = 1
  , issueMilestone = Nothing
  }